# Simple Docker setup for ShellHacks 2025 Ops Mesh Demo
# This version runs the frontend in development mode to avoid build issues

FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Set working directory
WORKDIR /app

# Copy backend requirements and install Python dependencies
COPY ops-mesh-backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY ops-mesh-backend/ ./

# Copy frontend package files and install dependencies
COPY ops-mesh-frontend/package*.json ./frontend/
WORKDIR /app/frontend
RUN npm ci

# Copy frontend source code
COPY ops-mesh-frontend/ ./

# Go back to app root
WORKDIR /app

# Create startup script
COPY docker-entrypoint.sh /app/
RUN chmod +x /app/docker-entrypoint.sh

# Create data directory
RUN mkdir -p /app/data

# Expose ports
EXPOSE 8000 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set environment variables
ENV PYTHONPATH=/app
ENV DATABASE_URL=sqlite:///./data/ops_mesh.db
ENV API_V1_STR=/api/v1
ENV PROJECT_NAME="Ops Mesh Backend"
ENV BACKEND_CORS_ORIGINS='["http://localhost:3000","http://localhost:3001","http://127.0.0.1:3000","http://127.0.0.1:3001"]'
ENV DEBUG=false
ENV RELOAD=false

# Use startup script
ENTRYPOINT ["/app/docker-entrypoint.sh"]
